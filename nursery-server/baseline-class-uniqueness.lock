# Danger! Multiple jars contain identically named classes. This may cause different behaviour depending on classpath ordering.
# Run ./gradlew checkClassUniqueness --write-locks to update this file

## runtimeClasspath
[com.google.code.findbugs:annotations, com.google.code.findbugs:jsr305]
  - javax.annotation.MatchesPattern$Checker
  - javax.annotation.Nonnegative$Checker
  - javax.annotation.Nonnull$Checker
  - javax.annotation.RegEx$Checker
  - javax.annotation.meta.When
[commons-logging:commons-logging, org.springframework:spring-jcl]
  - org.apache.commons.logging.Log
  - org.apache.commons.logging.LogFactory
  - org.apache.commons.logging.LogFactory$1
  - org.apache.commons.logging.impl.NoOpLog
  - org.apache.commons.logging.impl.SimpleLog
[jakarta.ws.rs:jakarta.ws.rs-api, javax.ws.rs:javax.ws.rs-api]
  - javax.ws.rs.client.ClientBuilder
  - javax.ws.rs.client.FactoryFinder
  - javax.ws.rs.core.Response
  - javax.ws.rs.core.Response$ResponseBuilder
  - javax.ws.rs.core.Response$Status
  - javax.ws.rs.core.Response$Status$Family
  - javax.ws.rs.core.Response$StatusType
  - javax.ws.rs.ext.FactoryFinder
  - javax.ws.rs.ext.MessageBodyWriter
  - javax.ws.rs.ext.RuntimeDelegate
  - javax.ws.rs.sse.FactoryFinder
  - javax.ws.rs.sse.SseEventSource
  - javax.ws.rs.sse.SseEventSource$Builder
[javax.inject:javax.inject, org.glassfish.hk2.external:jakarta.inject]
  - javax.inject.Inject
  - javax.inject.Named
  - javax.inject.Provider
  - javax.inject.Qualifier
  - javax.inject.Scope
  - javax.inject.Singleton
[org.glassfish.hk2.external:aopalliance-repackaged, org.springframework:spring-aop]
  - org.aopalliance.aop.AspectException
  - org.aopalliance.intercept.ConstructorInterceptor
  - org.aopalliance.intercept.ConstructorInvocation
  - org.aopalliance.intercept.Invocation
  - org.aopalliance.intercept.Joinpoint
  - org.aopalliance.intercept.MethodInterceptor
  - org.aopalliance.intercept.MethodInvocation
